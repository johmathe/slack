#!/bin/bash
# Install caffe dependencies.
set -e
set -x
function set_default_owner {
  chown -R root:staff "$1"
}

function set_permission_root {
  set_default_owner "$1"
  # find "$1" -type f ! -executable -exec chmod 644 {} \; || true
  # find "$1" -type f -executable -exec chmod 755 {} \; || true
  # find "$1" -type d -exec chmod 755 {} \; || true
  find "$1" ! -executable -exec chmod 644 {} \; || true
  find "$1" -executable -exec chmod 755 {} \; || true
}

# NOTE(ha): from martin's set_permissions_stow()
# parameter $1: absolute path of the stow directory
# parameter $2: name of the package directory / base path
function set_stow_home {
  # temporarily set HOME for stow
  HOME="$1" stow -d "$1" -D "$2"
  HOME="$1" stow -d "$1" "$2"
}

# parameter $1: absolute path of the stow directory
# parameter $2: name of the package directory / base path
function set_permissions_stow {
  set_permission_root "$1/$2"
  set_stow_home "$1" "$2"
}


SRC_PATH="/usr/local/src/"
STOW_PATH="/usr/local/stow/"

MAKE="make --jobs=$NUM_THREADS"

apt-get -y update
apt-get -y install stow \
    python-pip libyaml-dev libwebp-dev \
    wget git curl \
    python-dev python-numpy python-scipy \
    libleveldb-dev libsnappy-dev libopencv-dev \
    libboost-dev libboost-system-dev libboost-python-dev libboost-thread-dev \
    libprotobuf-dev protobuf-compiler \
    libatlas-dev libatlas-base-dev \
    libhdf5-serial-dev libgflags-dev libgoogle-glog-dev \
    bc cmake \
    liblmdb-dev

easy_install -U distribute
GPU_DETECTED=$(lspci | grep -c "VGA compatible controller: NVIDIA" || true)
ARCHITECTURE=$(uname -m)

if [ $GPU_DETECTED -gt "0" ]; then
  CUDA_URL="http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.5-18_amd64.deb"
  CUDA_FILE="/tmp/cuda_install.deb"
  curl http://us.download.nvidia.com/XFree86/Linux-x86_64/352.41/NVIDIA-Linux-x86_64-352.41.run -o NVIDIA-Linux-x86_64-352.41.run
  sh NVIDIA-Linux-x86_64-352.41.run || true
  curl ${CUDA_URL} -o ${CUDA_FILE}
  dpkg -i ${CUDA_FILE}
  rm -f ${CUDA_FILE}
  apt-get -y update
  apt-get -y install cuda-7-5 cuda-core-7-5 cuda-cublas-7-5 \
      cuda-cublas-dev-7-5 cuda-cudart-7-5 cuda-cudart-dev-7-5 cuda-curand-7-5 \
      cuda-curand-dev-7-5
  if [ $ARCHITECTURE == "x86_64" ]; then
    # Install cuDNN from baylabs dropbox folder
    CUDNN_PACKAGE="cudnn-7.0-linux-x86-v3"
    CUDNN_FILE="${CUDNN_PACKAGE}.tgz"
    CUDNN_URL="https://www.dropbox.com/s/u7nkhrdpej75639/${CUDNN_FILE}"
    CUDNN_LINKS="cudnn-links"
    pushd ${SRC_PATH}
    rm -f "${SRC_PATH}/${CUDNN_FILE}"
    rm -rf "${SRC_PATH}/${CUDNN_PACKAGE}"
    rm -rf "${STOW_PATH}/${CUDNN_PACKAGE}"
    rm -rf "${STOW_PATH}/${CUDNN_LINKS}"
    wget ${CUDNN_URL}
    tar xvzf ${CUDNN_FILE}
    mv ${CUDNN_PACKAGE} ${STOW_PATH}
    pushd ${STOW_PATH}
    mkdir -p "${STOW_PATH}/${CUDNN_LINKS}/include"
    mkdir -p "${STOW_PATH}/${CUDNN_LINKS}/lib"
    ln -s "../../${CUDNN_PACKAGE}/cudnn.h" \
        "${STOW_PATH}/${CUDNN_LINKS}/include"
    ln -s "../../${CUDNN_PACKAGE}/libcudnn.so" \
        "${STOW_PATH}/${CUDNN_LINKS}/lib"
    ln -s "../../${CUDNN_PACKAGE}/libcudnn.so.7.0" \
        "${STOW_PATH}/${CUDNN_LINKS}/lib"
    ln -s "../../${CUDNN_PACKAGE}/libcudnn.so.7.0.64" \
        "${STOW_PATH}/${CUDNN_LINKS}/lib"
    ln -s "../../${CUDNN_PACKAGE}/libcudnn_static.a" \
        "${STOW_PATH}/${CUDNN_LINKS}/lib"
    chown -R root:staff "${STOW_PATH}/${CUDNN_PACKAGE}"
    set_permissions_stow ${STOW_PATH} ${CUDNN_LINKS}
    popd # ${STOW_PATH}
    popd # ${SRC_PATH}
  fi
fi

sudo apt-get remove --purge nvidia-352 nvidia-352-dev nvidia-352-uvm nvidia-modprobe nvidia-opencl-icd-352 nvidia-settings
